require(mosaic)
options(digits=3)
palette = trellis.par.get()$superpose.symbol$col
require(mosaic)
options(digits=3)
palette = trellis.par.get()$superpose.symbol$col
#library(Stat2Data)
library(forecast)
library(lmtest) # if you want p-values for coefficients in ARIMA models
library(tseries) # need for Augmented Dickey-Fuller test
require(fBasics) # need for normality tests of residuals
require(mosaic)
options(digits=3)
palette = trellis.par.get()$superpose.symbol$col
#library(Stat2Data)
library(forecast)
library(lmtest) # if you want p-values for coefficients in ARIMA models
library(tseries) # need for Augmented Dickey-Fuller test
require(fBasics) # need for normality tests of residuals
data("CO2Hawaii")
head(CO2Hawaii)
require(mosaic)
options(digits=3)
palette = trellis.par.get()$superpose.symbol$col
library(Stat2Data)
library(forecast)
library(lmtest) # if you want p-values for coefficients in ARIMA models
library(tseries) # need for Augmented Dickey-Fuller test
require(fBasics) # need for normality tests of residuals
data("CO2Hawaii")
head(CO2Hawaii)
tail(CO2Hawaii)
class(CO2Hawaii)
co2 = ts(CO2Hawaii$CO2)
class(co2)
plot(co2, ylab = "CO2 levels", xlab = "Time since January 1988", main = "CO2 Levels", col = "blue")
plot(as.ts(co2[324:360]), ylab = "CO2 levels", xlab = "Time since January 2015", main = "CO2 levels over the last 3 years in Hawaii", col = "blue")
class(co2)
class(CO2Hawaii)
co2 = ts(CO2Hawaii$CO2)
class(co2)
plot(co2, ylab = "CO2 levels", xlab = "Time since January 1988", main = "CO2 Levels", col = "blue")
plot(as.ts(co2[324:360]), ylab = "CO2 levels", xlab = "Time since January 2015", main = "CO2 levels over the last 3 years in Hawaii", col = "blue")
class(CO2Hawaii)
co2 = ts(CO2Hawaii$CO2)
class(co2)
```{r, return = False}
data("CO2Hawaii")
head(CO2Hawaii)
tail(CO2Hawaii)
data("CO2Hawaii")
head(CO2Hawaii)
tail(CO2Hawaii)
class(CO2Hawaii)
co2 = ts(CO2Hawaii$CO2)
class(co2)
